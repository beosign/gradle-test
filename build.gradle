apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin:'application'

repositories {

 	maven {
        credentials {
            username "${beosign_maven_user}"
            password "${beosign_maven_password}"
        }
        url "${beosign_maven_ext_url}"
    }
 	maven {
        credentials {
            username "${beosign_maven_user}"
            password "${beosign_maven_password}"
        }
        url "${beosign_maven_url}"
    }
 	maven {
        credentials {
            username "${beosign_maven_user}"
            password "${beosign_maven_password}"
        }
        url "${beosign_maven_snapshot_url}"
    }
    mavenLocal()
    mavenCentral()
}
 
// Workaround: Gradle always uses default JRE container
eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

configurations {
    deployerJars
}


dependencies {
	compile('mysql:mysql-connector-java:5.1.6')
	compile("com.ecyrd.speed4j:speed4j:0.4")
	compile 'org.slf4j:slf4j-api:1.7.+'
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.0.+'
	compile 'org.apache.logging.log4j:log4j-core:2.0.+'
	
    testCompile("junit:junit:4+")
	 
	deployerJars "org.apache.maven.wagon:wagon-http:2.2"
}

sourceCompatibility=1.8
project.group="gradle-test"
project.version="0.0.3"

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}



jar {
    baseName = 'gradle-test'
}


artifacts {
    archives jar
}


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${beosign_maven_base_url}/libs-${project.version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release' }-local") {
            	 authentication(userName: beosign_maven_user, password: beosign_maven_password)
            }
        }
    }
}

